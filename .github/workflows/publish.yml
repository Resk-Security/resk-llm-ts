name: Bun Package CI/CD



on:
  push:
    branches: [main]
    tags:
      - 'v*' # Run workflow on version tags, e.g. v1.0.0
  pull_request:
    branches: [main]

# Permissions for GitHub Release creation
permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bun-version: ['latest', '1.0.0'] # Test on different Bun versions

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Install dependencies
        run: bun install

      - name: Lint code
        run: bun run lint

      - name: Type check with TypeScript
        run: bun run build

      - name: Run tests
        run: bun test

  build-and-publish:
    needs: test # Run only if tests pass
    runs-on: ubuntu-latest
    # Only publish on tag push events
    if: startsWith(github.ref, 'refs/tags/v') 
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Node.js for NPM registry
        uses: actions/setup-node@v4
        with:
          node-version: '20.x' 
          registry-url: 'https://registry.npmjs.org' # Set npm registry

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build:prod

      - name: Create package
        run: npm pack

      - name: Verify package contents
        run: npm pack --dry-run

      - name: Publish package to npmjs
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # Use npm token secret

      - name: Get package info
        id: package
        run: |
          echo "name=$(bun --print "require('./package.json').name")" >> $GITHUB_OUTPUT
          echo "version=$(bun --print "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
            ${{ steps.package.outputs.name }}-${{ steps.package.outputs.version }}.tgz
          generate_release_notes: true
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }} 